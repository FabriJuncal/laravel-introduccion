Idiomas de Mensajes de errores:
"lang"
En este archivo se agregan los mensajes de errores que se reciben de Laravel, por lo general solo se encuentra la versión de Ingles
pero se puede agregar otro directorio indicando el idioma y traducir los mensajes de ingles que ya se encuentran.
Luego se deber configurar en la ruta "config\app.php" y buscar la key "locale" y cambiar el valor "en" por el que se desee

----------------------------------------------------------------------------------------------------------------------------------------------------

Rutas Dinamicas: 
"routes\web.php"
En este archivo se agregan las rutas dinamicas que tendrá el proyecto

----------------------------------------------------------------------------------------------------------------------------------------------------

Controladores:
"app\Http\Controllers\[CONTROLADOR_CREADO].php"
En este directorio llamado "Controllers" se crearan los controladores que adminsitren las Rutas.
Estos constroladores se pueden crear con el siguiente comando:

	php artisan make:controller [NombreControlador]

	EJ: php artisan make:controller HomeController

----------------------------------------------------------------------------------------------------------------------------------------------------

Vistas:
"resources\views\[VISTA_CREADA].blade.php"
En este directorio llamado "views" se crearan las vistas que serán invocadas por los controladores.
Las vistas son archivos .blade.php que contendrán todo el HTML, CSS y JS de la página.
La extensión .blade.php se utiliza para poder hacer uso del Sistema de Plantillas de Blade y poder reutilizar todo lo que sea HTML

----------------------------------------------------------------------------------------------------------------------------------------------------

Variables de Entorno:
".env"
En este archivo se almacenarán todas las variables globales como las credencials de acceso a la base de datos.
Se debe almacenar aqui todas las credenciales que no se quieran subir al repositorio, ya que este archivo no se subirá

----------------------------------------------------------------------------------------------------------------------------------------------------

Conección a la Base de Datos:
"config\database.php"
En este archivo se agregan las configuraciones para acceder a la base de datos

----------------------------------------------------------------------------------------------------------------------------------------------------

Migraciones (Versionado de Tablas de Laravel):
"database\migrations"
En este directorio se almacenan los códigos que crearan las tablas y tambien se modificarán los campos de las tablas y entre otras cosas del proyecto

1) Ejecutar las migraciones para que se actualice la base de datos:

php artisan migrate

2) Crear una Migración en la ruta "database\migrations"
	
	// Crea una Tabla
	php artisan make:migration [TipoAccion]_[NombreMigracion]_[ObjectoBD]
	
	EJ: php artisan make:migration create_cursos_table

	// Crea una columna en la Tabla
	php artisan make:migration [TipoAccion]_[NombreColumna]_to_[NombreTabla]_table

	EJ: php artisan make:migration add_avatar_to_users_table

3) Rollback por lotes (esto se puede ver en la tabla "migrations" en la columna "batch") de los objetos de base creados:

	php artisan migrate:rollback

4) Eliminar las Migraciones existentes (tablas que ya se encuentren en la base de datos por ejemplo)
   y luego crearlas todas juntas, este comando sirve en el caso que se haya actualizado algún campo de alguna tabla 
   que ya se haya creado atravez de las migraciones, por lo tanto es necesario eliminarla y luego crearla detectando
   el nuevo campo creado en la tabla.
   Es importante que se se pierden todos los datos que se encuentren en las tablas, por lo tanto no es recomendable
   ejecutarlo en Producción:

	php artisan migrate:fresh

5) Cambiar propiedades de una columna desde las migraciones, para esto primero hay que instalarse la siguiente libreria:

	composer require doctrine/dbal

   Luego hay que crear una migración siguiendo las siguientes convenciones:

	php artisan make:migration [Accion]_propiedades_to_[NombreTabla]_table

	EJ: php artisan make:migration cambiar_propiedades_to_users_table

----------------------------------------------------------------------------------------------------------------------------------------------------

Modelos:
"app\Models"
En este directorio llamado "Models" se crearan los Modelos que administren las base de datos.
Estos modelos se pueden crear con el siguiente comando:

	php artisan make:model [NombreModelo]
	
	EJ: php artisan make:model Curso

----------------------------------------------------------------------------------------------------------------------------------------------------

Mutadores:

Los mutadores se definen dentro del modelo en el directorio "app\Models".
Estos son funciones que se utilizan para modificar los datos que se insertarán en las tablas.

----------------------------------------------------------------------------------------------------------------------------------------------------
